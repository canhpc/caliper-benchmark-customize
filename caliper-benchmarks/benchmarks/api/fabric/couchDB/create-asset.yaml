---
test:
  name: create-asset-size-ramp-couchDB
  description: This is a duration based benchmark targetting a Hyperledger Fabric network with a CouchDB world state database using the `fixed-asset` NodeJS chaincode contract that is interacted with via
    a Fabric-SDK-Node Gateway. Each test round invokes the `createAsset` method, with successive rounds increasing the bytesize of the asset
    added into the world state databse.
  clients:
    type: local
    number: 5
  rounds:
  - label: create-asset-100
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 10
        sleep_time: 500
    arguments:
      bytesize: 100
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-2000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 2000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 10
        sleep_time: 500
    arguments:
      bytesize: 2000
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-4000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 4000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 10
        sleep_time: 500
    arguments:
      bytesize: 4000
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-8000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 8000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 5
        sleep_time: 500
    arguments:
      bytesize: 8000
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-16000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 16000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 2
        sleep_time: 500
    arguments:
      bytesize: 16000
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-32000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 32000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 1
        sleep_time: 500
    arguments:
      bytesize: 32000
    callback: benchmarks/api/fabric/lib/create-asset.js
  - label: create-asset-64000
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 64000 bytes into the World State database.
    chaincodeId: fixed-asset
    txDuration:
    - 120
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 1
        sleep_time: 500
    arguments:
      bytesize: 64000
    callback: benchmarks/api/fabric/lib/create-asset.js
#   - label: create-asset-8000-fixed-tps
#     description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 8000 bytes into the World State database at a fixed TPS rate.
#     chaincodeId: fixed-asset
#     txDuration:
#     - 120
#     rateControl:
#     - type: fixed-rate
#       opts:
#         tps: 125
#     arguments:
#       bytesize: 8000
#     callback: benchmarks/api/fabric/lib/create-asset.js
monitor:
  type:
  - process
  process:
  - command: node
    arguments: fabricClientWorker.js
    multiOutput: avg
  interval: 10
