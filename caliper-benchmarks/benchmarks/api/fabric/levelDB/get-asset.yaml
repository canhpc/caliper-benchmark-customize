---
test:
  name: get-asset-ramp-levelDB
  description: This is a duration based benchmark targetting a Hyperledger Fabric network with a LevelDB world state database using the `fixed-asset` NodeJS chaincode contract that is interacted with via 
    a Fabric-SDK-Node Gateway. Each test round invokes the 'getAsset()' API method. Successive rounds create and retrieve assets of larger bytesize.
  clients:
    type: local
    number: 4
  rounds:
  - label: get-asset-evaluate-100
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 100 bytes.
    chaincodeId: fixed-asset
    txDuration:
    - 1
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 15
    arguments:
      create_sizes: [100,1000,2000,4000,8000,16000,32000,64000]
      assets: 1000
      bytesize: 100
      uuid: '500'
      consensus: false
    callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-1000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 1000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 1000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-2000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 2000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 2000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-4000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 4000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 4000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-8000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 8000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 8000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-16000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 16000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 16000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-32000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 32000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 32000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  # - label: get-asset-evaluate-64000
  #   description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 64000 bytes.
  #   chaincodeId: fixed-asset
  #   txDuration:
  #   - 300
  #   rateControl:
  #   - type: fixed-backlog
  #     opts:
  #       unfinished_per_client: 15
  #   arguments:
  #     nosetup: true
  #     bytesize: 64000
  #     uuid: '500'
  #     consensus: false
  #   callback: benchmark/network-model/lib/get-asset.js
  - label: get-asset-evaluate-8000-fixed-tps
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `getAsset`. This method performs a getState on an item that matches an asset of size 8000 bytes at a fixed TPS.
    chaincodeId: fixed-asset
    txDuration:
    - 3
    rateControl:
     - type: fixed-rate
       opts:
         tps: 350
    arguments:
      nosetup: true
      bytesize: 8000
      assets: 1000
      consensus: false
    callback: benchmark/network-model/lib/get-asset.js
monitor:
  type:
  - docker
  - process
  docker:
    name:
    - all
  process:
  - command: node
    arguments: fabricClientWorker.js
    multiOutput: avg
  interval: 1
