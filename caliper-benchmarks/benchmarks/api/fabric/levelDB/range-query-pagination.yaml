---
test:
  name: fixed-asset-range-query-pagination-ramp-levelDB
  description: This is a duration based benchmark targetting a Hyperledger Fabric network with a LevelDB world state database using the `fixed-asset` NodeJS chaincode contract that is interacted with via 
    a Fabric-SDK-Node Gateway. Each test round invokes the 'paginatedRangeQuery' method. Successive rounds increase the pagesize of retrieved assets.
  clients:
    type: local
    number: 4
  rounds:
  - label: range-query-evaluate-10-8000
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `paginatedRangeQuery`. This method performs a paginated range query, with a passed pagesize of 10 and a range keys that bound 200 assets created by the calling client. Each returned asset is of size 8000 bytes.
    chaincodeId: fixed-asset
    txDuration:
    - 300
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 15
    arguments:
      create_sizes: [8000]
      assets: 8000
      bytesize: 8000
      range: 200
      offset: 100
      pagesize: '10'      
      nomatch: true
      consensus: false
    callback: benchmark/network-model/lib/range-query-asset.js
  - label: range-query-evaluate-20-8000
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `paginatedRangeQuery`. This method performs a paginated range query, with a passed pagesize of 20 and a range keys that bound 200 assets created by the calling client. Each returned asset is of size 8000 bytes.
    chaincodeId: fixed-asset
    txDuration:
    - 300
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 15
    arguments:
      bytesize: 8000
      range: 200
      offset: 100
      pagesize: '20'
      nosetup: true
      consensus: false
    callback: benchmark/network-model/lib/range-query-asset.js
  - label: range-query-evaluate-50-8000
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `paginatedRangeQuery`. This method performs a paginated range query, with a passed pagesize of 50 and a range keys that bound 200 assets created by the calling client. Each returned asset is of size 8000 bytes.
    chaincodeId: fixed-asset
    txDuration:
    - 300
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 15
    arguments:
      bytesize: 8000
      range: 200
      offset: 100
      pagesize: '50'
      nosetup: true
      consensus: false
    callback: benchmark/network-model/lib/range-query-asset.js
  - label: range-query-evaluate-100-8000
    description: Test an evaluateTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `paginatedRangeQuery`. This method performs a paginated range query, with a passed pagesize of 100 and a range keys that bound 200 assets created by the calling client. Each returned asset is of size 8000 bytes.
    chaincodeId: fixed-asset
    txDuration:
    - 300
    rateControl:
    - type: fixed-backlog
      opts:
        unfinished_per_client: 15
    arguments:
      bytesize: 8000
      range: 200
      offset: 100
      pagesize: '100'
      nosetup: true
      consensus: false
    callback: benchmark/network-model/lib/range-query-asset.js
monitor:
  type:
  - docker
  - process
  docker:
    name:
    - all
  process:
  - command: node
    arguments: fabricClientWorker.js
    multiOutput: avg
  interval: 1
